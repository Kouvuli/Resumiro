drop table users cascade;
drop table companies cascade;
drop table skills cascade;
drop table experiences cascade;
drop table certificates cascade;
drop table users_skills cascade;
drop table jobs_skills cascade;
drop table jobs_applicants cascade;
drop table jobs cascade;
drop table fields cascade;
drop table resumes cascade;
drop table locations cascade;
drop table crypto_nonce cascade;
drop table rooms cascade;
drop table notifications cascade;
drop table notification_types cascade;
drop table notifications_users cascade;
drop type "roles";

CREATE TYPE roles AS ENUM ('candidate', 'recruiter');

create table skills (
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL,
	
	CONSTRAINT PK_SKILLS PRIMARY KEY(ID)
);

-- quan he 1 user co nhieu exp qua user_id
create table experiences (
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    position VARCHAR(100) NOT NULL,
	start VARCHAR(50) NOT NULL,
	finish VARCHAR(50) NOT NULL,
	company_id INT NOT NULL,
	user_id INT NOT NULL,
	
	CONSTRAINT PK_EXPERIENCES PRIMARY KEY(ID)
);

-- them chung chi cho candidate
CREATE TABLE certificates (
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(100) NOT NULL,
	verified_at timestamp not null,
	user_id INT NOT NULL,
	
	CONSTRAINT pk_certificates PRIMARY KEY(ID)
);

create table users(
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	username VARCHAR(50) NOT NULL,
	password VARCHAR(100) NOT NULL,
	avatar varchar(1000),
	background varchar(1000),
	address_wallet VARCHAR(100) NOT NULL UNIQUE,
	full_name VARCHAR(100),
	email VARCHAR(100),
    phone varchar(100),
    about varchar(5000),
	nonce_id int,
	room_id int,
	company_id int,
	position varchar(100),
	is_admin boolean,
	role roles not null,
	CONSTRAINT pk_users PRIMARY KEY(ID)
	
);

-- CREATE TABLE candidates (
-- 	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
-- 	username VARCHAR(50) NOT NULL,
-- 	password VARCHAR(100) NOT NULL,
-- 	avatar varchar(1000),
-- 	background varchar(1000),
-- 	address_wallet VARCHAR(100) NOT NULL UNIQUE,
-- 	full_name VARCHAR(100),
-- 	email VARCHAR(100),
--     phone varchar(100),
--     about varchar(5000),
-- 	nonce_id int,
-- 	room_id int,
-- 	role roles not null,
-- 	CONSTRAINT pk_candidates PRIMARY KEY(ID)
-- );


-- CREATE TABLE recruiters (
-- 	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
-- 	username VARCHAR(50) NOT NULL,
-- 	password VARCHAR(100) NOT NULL,
-- 	avatar varchar(1000),
-- 	background varchar(1000),
-- 	address_wallet VARCHAR(100) NOT NULL UNIQUE,
-- 	full_name VARCHAR(100),
-- 	email VARCHAR(100),
--     phone varchar(100),
--     company_id int,
-- 	position varchar(100),
-- 	nonce_id int,
-- 	room_id int,
-- 	role roles not null,
-- 	is_admin boolean,
-- 	CONSTRAINT pk_recruiters PRIMARY KEY(ID)
-- );

CREATE TABLE locations (
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(100) not null,

	CONSTRAINT pk_locations PRIMARY KEY(ID)
);

CREATE TABLE companies (
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) not null,
    logo VARCHAR(1000) not null,
    background VARCHAR(1000) not null,
    about varchar(1000) not null,
    scale VARCHAR(100),
    website VARCHAR(1000),
    location_id INT NOT NULL,
	address varchar(100),
	introduction varchar(100),
	CONSTRAINT pk_companies PRIMARY KEY(ID)
);


create table resumes (
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    data varchar(1000) not null,
    owner_id INT NOT NULL,
    title varchar(100),
    create_at timestamp not null,
	
	CONSTRAINT pk_resumes PRIMARY KEY(ID)
);


create table fields (
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(100) not null,
	description varchar(5000),
	CONSTRAINT pk_fields PRIMARY KEY(ID)
);

create table jobs (
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    title varchar(100) not null,
    location_id INT NOT NULL,
    job_type varchar(100) not null,
    experience int not null,
    requirements varchar(1000),
    benefits varchar(1000),
    create_at timestamp not null,
	update_at timestamp,
    company_id int not null,
	salary int not null,
	field_id INT NOT NULL,
	owner_id INT NOT NULL,
	CONSTRAINT pk_jobs PRIMARY KEY(ID)
);

create table jobs_applicants (
	job_id INT NOT NULL,
    applicant_id  INT NOT NULL,
	CONSTRAINT pk_jobs_applicants PRIMARY KEY(job_id,applicant_id)
);


create table jobs_skills (
	job_id INT  NOT NULL,
    skill_id INT  NOT NULL,
	CONSTRAINT pk_jobs_skills PRIMARY KEY(job_id,skill_id)
);


create table users_skills (
	user_id INT  NOT NULL,
    skill_id INT  NOT NULL,
	CONSTRAINT pk_users_skills PRIMARY KEY(user_id,skill_id)
);



CREATE TABLE crypto_nonce (
   	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nonce varchar NOT NULL,
    expires timestamp NOT NULL,
    CONSTRAINT pk_crypto_nonce PRIMARY KEY(ID)
);


CREATE TABLE rooms (
   	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    token varchar NOT NULL,
    CONSTRAINT pk_rooms PRIMARY KEY(ID)
);

create table notifications_users(
	user_id INT  NOT NULL,
    	notification_id INT  NOT NULL,
	is_read boolean not null,
	CONSTRAINT pk_notifications_users PRIMARY KEY(user_id,notification_id)
);

create table notifications(
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title varchar,
	content varchar,
	author_id int not null,
	notification_type_id int not null,
	object_url varchar,
	create_at timestamp not null,
	
	CONSTRAINT pk_notifications PRIMARY KEY(ID)
);

create table notification_types(
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name varchar,
	CONSTRAINT pk_notification_types PRIMARY KEY(ID)
);

-- Add skills
INSERT INTO skills (name) VALUES
('Java'),
('Python'),
('React.js'),
('Node.js'),
('Vue.js'),
('Docker'),
('PostgreSQL'),
('AWS'),
('MySQL'),
('Solidity'),
('C/C++');


INSERT INTO NOTIFICATION_TYPES(name) VALUES
('New job'),
('Request join company'),
('Applied job');


-- Add locations
INSERT INTO locations (name) VALUES
('TP.Hồ Chí Minh'),
('Hà Nội'),
('Đà Nẵng'),
('Nha Trang');



INSERT INTO fields (name,description) VALUES
('Lập trình/ IT/ CNTT/ Engineering','This is a Job'),
('Nhân sự/ Human Resource/ HR','This is a Job'),
('Tài chính/ Finance','This is a Job'),
('Thiết kế/ Design','This is a Job'),
('Project Manager/ Product Management/ Giám đốc sản phẩm','This is a Job');

